swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
      # - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /transactions/{date}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get transactions for current month grouped by account
      description: This API endpoint fetches all transactions for the specified month if a date parameter is provided. If no date parameter is provided, it automatically retrieves transactions for the current month.
      produces:
        - application/json
      parameters:
        - in: query
          name: date
          description: Transaction date (optional)
          type: string
      responses:
        "200":
          description: Transactions retrived Successfully
          schema:
            type: array
            items:
              $ref: "#/definitions/Transactions"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get transaction
      description: API for fetching transaction
      produces:
        - application/json
      parameters:
        - in: path
          name: transactionId
          description: number of transaction
          required: true
          type: string
      responses:
        "200":
          description: Transactions retrived Successfully
          schema:
            $ref: "#/definitions/Transaction"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden 
        "404":
          description: Not Found 
        "500":
          description: Internal Server Error
    patch:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Update transaction
      description: API for update transaction
      produces:
        - application/json
      parameters:
        - in: path
          name: transactionId
          description: number of transaction
          required: true
          type: string
        - in: body
          name: body
          description: Updated transaction
          required: true
          schema:
            $ref: "#/definitions/UpdateTransaction"
      responses:
        "200":
          description: Transactions retrived Successfully
          schema:
            type: array
            items:
              $ref: "#/definitions/UpdateTransaction"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Transaction:
    type: object
    properties: 
      transactionId:
        type: integer
        description: Unique identifier for the transaction
      date:
        type: string
        format: date
        description: Transaction date
      description:
        type: string
        description: Name of purchasing store
      amount:
        type: number
        description: Value of transaction
      balance:
        type: number
        description: Value of balance
      typeTransaction:
        type: string
        description: Type of the transaction (debit, credit)   
      category:
        type: string
        description: Name of the category for organization
      note:
        type: string
        description: Additional and Personnal note for the User
  Transactions:
    type: object
    properties: 
      bankAccountId: 
        type: string
      transactions:
        type: array
        items:
          $ref: '#/definitions/Transaction'
  UpdateTransaction:
    type: object
    properties:
      transactionId:
        type: integer
      category:
        type: string
      note:
        type: string
 
